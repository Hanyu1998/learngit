library("knitr")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, message=FALSE, warning = FALSE,
fig.height=4.5)
knitr::include_graphics("images/bigdata_wave.png")
knitr::include_graphics("images/data_growth.png")
knitr::include_graphics("images/fb_connections_world.jpg")
knitr::include_graphics("images/separate-trips-uberpool-trips.gif")
knitr::include_graphics("images/apple_health_app.jpg")
knitr::include_graphics("images/herb_simon.jpg")
knitr::include_graphics("images/blueprint.jpg")
knitr::include_graphics("images/german_train_visualization.png")
knitr::include_graphics("images/vaccinations_measles.png")
knitr::include_graphics("images/fire_hydrant_drink.jpg")
knitr::include_graphics("images/ggplot2_overview.png")
knitr::include_graphics("images/map_election2016.png")
knitr::include_graphics("images/map_crime_in_NYC.png")
knitr::include_graphics("images/text_sotu.png")
knitr::include_graphics("images/text_dictionary.png")
knitr::include_graphics("images/game_of_thrones_network.png")
knitr::include_graphics("images/shiny_movie_explorer.png")
knitr::include_graphics("images/interactive_d3js.png")
library(ggplot2)
library(gapminder)  # 'gapminder' package contains the data
library("knitr")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, message=FALSE, warning = FALSE)
knitr::include_graphics("baby-names-wordcloud.jpg")
library(babynames)
library(ggplot2)    # the king of plotting
library(magrittr)   # chain operators, e.g. to "pipe" a value forward
library(dplyr)      # for data manipulation
str(babynames)
head(babynames)
tail(babynames)
# How many unique names?
length(unique(babynames$name))
# How many kids in database (note n>5 per name/year)
sum(babynames$n)/10^6
ggplot(babynames, aes(year, n)) +
geom_line(data = filter(babynames, name=="James"))
head(filter(babynames, name=="James"))
# -> There are female and male entries for some names.
ggplot(babynames, aes(year, n)) +
geom_line(data = filter(babynames, name=="James"), aes(color=sex))
top10 <- babynames %>%
group_by(sex, name) %>%
summarize(total = sum(n)) %>%
arrange(sex,desc(total)) %>%
#group_by(sex) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
#arrange(sex, rank)
top10
top10female <- top10 %>% filter(sex == "F")
top10male <- top10 %>% filter(sex == "M")
top10female
top10male
top10 <- babynames %>%
group_by(sex, name) %>%
summarize(total = sum(n)) %>%
arrange(desc(total)) %>%
group_by(sex) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)  %>%
arrange(sex, rank)
top10f <- top10 %>% filter(sex=="F")
top10m <- top10 %>% filter(sex=="M")
top10f
top10m
babynames %>%
filter(sex=="F") %>%
filter(name %in% top10f$name) %>%
ggplot(., aes(year, n)) +
geom_line(aes(color=name,group=name))
babynames %>%
filter(sex=="M") %>%
filter(name %in% top10m$name) %>%
ggplot(., aes(year, n)) +
geom_line(aes(color=name, group=name))
common2017 <- babynames %>%
filter(year == 2017) %>%
group_by(sex) %>%
arrange(sex,desc(n)) %>%
mutate(rank=row_number())%>%
filter(rank <= 10)
common2017
#babynames %>%
#filter(year == 2017) %>%
#filter(sex == "F") %>%
#filter(name %in% common2017$name) %>%
#common2017 %>%
#filter(sex == "F") %>%
female_df <- common2017 %>% filter(sex == "F")
female_name <- female_df$name
female_name
babyname_df <- babynames %>% filter(name %in% female_name, sex =="F")
babyname_df
ggplot(babyname_df, aes(year,n)) + geom_line(aes(color = name))
female_babynames <- babynames %>% filter(sex == "F")
female_babynames
male_babynames <- babynames %>% filter(sex == "M")
unisex_df <- female_babynames %>% filter(name %in% male_babynames$name)
unisex_names <- unisex_df$name
unisex_names
babynames %>%
filter(name %in% unisex_names)%>%
group_by(name,sex)%>%
summarise(n)
unisex <- babynames %>%
group_by(name) %>%
mutate(all_n = sum(n)) %>%
group_by(sex,name )%>%
mutate(sex_n = sum(n))%>%
mutate(prop = sex_n / all_n) %>%
mutate(abs_prop = abs(prop - 0.5))%>%
arrange(abs_prop,desc(all_n))%>%
unique(unisex$name)
unisex <- babynames %>%
group_by(name) %>%
mutate(all_n = sum(n)) %>%
group_by(sex,name )%>%
mutate(sex_n = sum(n))%>%
mutate(prop = sex_n / all_n) %>%
mutate(abs_prop = abs(prop - 0.5))%>%
arrange(abs_prop,desc(all_n))%>%
unique(unisex$name)
female_babynames <- babynames %>% filter(sex == "F")
female_babynames%>%
group_by(year) %>%
mutate(year_born = sum(n))%>%
ungroup()%>%
mutate(name_prop =n / year_born)%>%
#计算每一年popular fraction的变化
arrange(name, year) %>%
mutate(difference = name_prop - lag(name_prop)) %>%
group_by(name) %>%
arrange(desc(difference))
female_babynames <- babynames %>% filter(sex == "F")
female_babynames%>%
group_by(year) %>%
mutate(year_born = sum(n))%>%
ungroup()%>%
mutate(name_prop =n / year_born)%>%
group_by(name)%>%
mutate(max_fraction = max(name_prop),
min_fraction = min(name_prop),
difference = max_fraction - min_fraction)%>%
arrange(desc(difference))
distinct_df = female_babynames %>% distinct(name)
distinct_df
#unique(female_babynames$name)
unisex <- babynames %>%
group_by(name) %>%
mutate(all_n = sum(n)) %>%
group_by(sex,name )%>%
mutate(sex_n = sum(n))%>%
mutate(prop = sex_n / all_n) %>%
mutate(abs_prop = abs(prop - 0.5))%>%
arrange(abs_prop,desc(all_n))%>%
unique(unisex$name)
unisex <- babynames %>%
group_by(name) %>%
mutate(all_n = sum(n)) %>%
group_by(sex,name )%>%
mutate(sex_n = sum(n))%>%
mutate(prop = sex_n / all_n) %>%
mutate(abs_prop = abs(prop - 0.5))%>%
arrange(abs_prop,desc(all_n))%>%
unique(unisex$name)
library("knitr")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, message=FALSE, warning = FALSE)
knitr::include_graphics("baby-names-wordcloud.jpg")
library(babynames)
library(ggplot2)    # the king of plotting
library(magrittr)   # chain operators, e.g. to "pipe" a value forward
library(dplyr)      # for data manipulation
str(babynames)
head(babynames)
tail(babynames)
# How many unique names?
length(unique(babynames$name))
# How many kids in database (note n>5 per name/year)
sum(babynames$n)/10^6
ggplot(babynames, aes(year, n)) +
geom_line(data = filter(babynames, name=="James"))
head(filter(babynames, name=="James"))
# -> There are female and male entries for some names.
ggplot(babynames, aes(year, n)) +
geom_line(data = filter(babynames, name=="James"), aes(color=sex))
top10 <- babynames %>%
group_by(sex, name) %>%
summarize(total = sum(n)) %>%
arrange(sex,desc(total)) %>%
#group_by(sex) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
#arrange(sex, rank)
top10
top10female <- top10 %>% filter(sex == "F")
top10male <- top10 %>% filter(sex == "M")
top10female
top10male
top10 <- babynames %>%
group_by(sex, name) %>%
summarize(total = sum(n)) %>%
arrange(desc(total)) %>%
group_by(sex) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)  %>%
arrange(sex, rank)
top10f <- top10 %>% filter(sex=="F")
top10m <- top10 %>% filter(sex=="M")
top10f
top10m
babynames %>%
filter(sex=="F") %>%
filter(name %in% top10f$name) %>%
ggplot(., aes(year, n)) +
geom_line(aes(color=name,group=name))
babynames %>%
filter(sex=="M") %>%
filter(name %in% top10m$name) %>%
ggplot(., aes(year, n)) +
geom_line(aes(color=name, group=name))
common2017 <- babynames %>%
filter(year == 2017) %>%
group_by(sex) %>%
arrange(sex,desc(n)) %>%
mutate(rank=row_number())%>%
filter(rank <= 10)
common2017
#babynames %>%
#filter(year == 2017) %>%
#filter(sex == "F") %>%
#filter(name %in% common2017$name) %>%
#common2017 %>%
#filter(sex == "F") %>%
female_df <- common2017 %>% filter(sex == "F")
female_name <- female_df$name
female_name
babyname_df <- babynames %>% filter(name %in% female_name, sex =="F")
babyname_df
ggplot(babyname_df, aes(year,n)) + geom_line(aes(color = name))
female_babynames <- babynames %>% filter(sex == "F")
female_babynames
male_babynames <- babynames %>% filter(sex == "M")
unisex_df <- female_babynames %>% filter(name %in% male_babynames$name)
unisex_names <- unisex_df$name
unisex_names
babynames %>%
filter(name %in% unisex_names)%>%
group_by(name,sex)%>%
summarise(n)
unisex <- babynames %>%
group_by(name) %>%
mutate(all_n = sum(n)) %>%
group_by(sex,name )%>%
mutate(sex_n = sum(n))%>%
mutate(prop = sex_n / all_n) %>%
mutate(abs_prop = abs(prop - 0.5))%>%
arrange(abs_prop,desc(all_n))%>%
unique(unisex$name)
unisex <- babynames %>%
group_by(name) %>%
mutate(all_n = sum(n)) %>%
group_by(sex,name )%>%
mutate(sex_n = sum(n))%>%
mutate(prop = sex_n / all_n) %>%
mutate(abs_prop = abs(prop - 0.5))%>%
arrange(abs_prop,desc(all_n))
unique(unisex$name)
#ungroup() %>%
#mutate(unisex_prop = n / all_n)%>%
library("knitr")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, message=FALSE, warning = FALSE)
library("knitr")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, message=FALSE, warning = FALSE)
knitr::include_graphics("baby-names-wordcloud.jpg")
